//This is an iterative approach

class Solution {
public
    ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode head = new ListNode(0);
        ListNode curr = head;

        while(list1!=0 && list2!=0){
            if(list1-val = list2-val){
                curr-next = list1;
                list1 = list1-next;
            }
            else{
                curr-next = list2;
                list2 = list2-next;
            }
            curr = curr-next;
        }
        if(list1!=0) curr-next = list1;
        if(list2!=0) curr-next = list2;
        
        return head-next;
    }
};

//This is a recursive approach

class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1==0) return l2;
        if(l2==0) return l1;

        if(l1->val <= l2->val){
            l1->next = mergeTwoLists(l1->next,l2);
            return l1;
        }
        else{
            l2->next = mergeTwoLists(l1,l2->next);
            return l2;
        }
    }
};